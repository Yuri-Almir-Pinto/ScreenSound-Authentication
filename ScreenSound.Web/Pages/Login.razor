@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@inject AuthAPI api
@inject NavigationManager navManager
@attribute [AllowAnonymous]

<MudPaper Class="px-8 pt-2 pb-4 mx-16 my-8" Justify="Justify.Center">

    <AuthorizeView>
        <Authorized>
            <p>Você está conectado como @context.User.Identity.Name</p>
        </Authorized>

        <NotAuthorized>
            <MudForm>

                <MudTextField T="string" Label="Email" @bind-Value="Email"
                              Variant="Variant.Outlined" Class="my-4"
                              Required="true" RequiredError="Email obrigatório!"
                              OnlyValidateIfDirty="true" />

                <MudTextField T="string" Label="Senha" @bind-Value="Senha"
                              InputType="InputType.Password"
                              Variant="Variant.Outlined" Class="my-4"
                              Required="true" RequiredError="Senha obrigatória!"
                              OnlyValidateIfDirty="true" />

                <MudButton Variant="Variant.Filled" Color="Color.Primary"
                           Class="my-6" @onclick="FazerLogin">
                    Login
                </MudButton>

            </MudForm>
        </NotAuthorized>
    </AuthorizeView>


</MudPaper>

@code {
    private string Email { get; set; } = "";
    private string Senha { get; set; } = "";

    [SupplyParameterFromQuery]
    public string ReturnUrl { get; set; } = "";

    public async void FazerLogin()
    {
        var response = await api.LoginAsync(Email, Senha);
        if (response.Success && !string.IsNullOrWhiteSpace(ReturnUrl))
        {
            navManager.NavigateTo(ReturnUrl);
        }
    }
}